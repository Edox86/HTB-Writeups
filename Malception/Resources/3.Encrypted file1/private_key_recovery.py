#!/usr/bin/env python3
# xor_unmask_privkey.py

HEX_BLOB = """

"""

KEY_HEX = "dc4673b05e3916b3"
KEY     = bytes.fromhex(KEY_HEX)          # 8-byte repeating key

# ----------------------------------------------------------------------
def xor_decrypt(cipher: bytes, key: bytes) -> bytes:
    klen = len(key)
    return bytes(b ^ key[i % klen] for i, b in enumerate(cipher))

def main():
    cipher_bytes = bytes.fromhex(''.join(HEX_BLOB.split()))
    plain_bytes  = xor_decrypt(cipher_bytes, KEY)

    # Show as UTF-8 (XML) and also save
    try:
        print(plain_bytes.decode('utf-8'))
    except UnicodeDecodeError:
        print("[!] Decrypted data isnâ€™t pure UTF-8; dumping hex instead.")
        print(plain_bytes.hex())

    with open("priv.xml", "wb") as f:
        f.write(plain_bytes)
    print("[+] Saved to priv.xml")

if __name__ == "__main__":
    main()
